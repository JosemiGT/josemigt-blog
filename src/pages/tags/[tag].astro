---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';
import type { InferGetStaticParamsType, InferGetStaticPropsType, GetStaticPaths, MarkdownInstance } from 'astro';
import { getCollection } from "astro:content";


export const getStaticPaths = (async () => {
    const allPosts = await getCollection("posts");
    const uniqueTags : string[] = [...new Set(allPosts.map((post) => post.data.tags).flat())];
    return uniqueTags.map((tag : string) => {
        const filteredPosts = allPosts.filter((post) => post.data.tags.includes(tag));
        return {
            params: { tag },
            props: { posts: filteredPosts },
        };
    });
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { tag } = Astro.params as Params;
const { posts } = Astro.props as Props;
---

<BaseLayout pageTitle={tag}>
  <hr>
  <p>Entradas etiquetadas con {tag}</p>
  <br/>
  <ul>
    {posts.map((post) => <BlogPost url={`/posts/${post.slug}`} postData={post.data}/>)}
  </ul>
</BaseLayout>